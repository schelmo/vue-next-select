import{o as e,c as l,a as o}from"./app.873d1ae3.js";const t='{"title":"API Reference","description":"","frontmatter":{},"headers":[{"level":2,"title":"Props","slug":"props"},{"level":3,"title":"model-value","slug":"model-value"},{"level":3,"title":"empty-model-value","slug":"empty-model-value"},{"level":3,"title":"options","slug":"options"},{"level":3,"title":"visible-options","slug":"visible-options"},{"level":3,"title":"disabled","slug":"disabled"},{"level":3,"title":"loading","slug":"loading"},{"level":3,"title":"label-by","slug":"label-by"},{"level":3,"title":"value-by","slug":"value-by"},{"level":3,"title":"disabled-by","slug":"disabled-by"},{"level":3,"title":"group-by","slug":"group-by"},{"level":3,"title":"placeholder","slug":"placeholder"},{"level":3,"title":"searchable","slug":"searchable"},{"level":3,"title":"search-placeholder","slug":"search-placeholder"},{"level":3,"title":"clear-on-close","slug":"clear-on-close"},{"level":3,"title":"clear-on-select","slug":"clear-on-select"},{"level":3,"title":"multiple","slug":"multiple"},{"level":3,"title":"min","slug":"min"},{"level":3,"title":"max","slug":"max"},{"level":3,"title":"taggable","slug":"taggable"},{"level":3,"title":"collapse-tags","slug":"collapse-tags"},{"level":3,"title":"hide-selected","slug":"hide-selected"},{"level":3,"title":"close-on-select","slug":"close-on-select"},{"level":3,"title":"maxHeight","slug":"maxheight"},{"level":3,"title":"openDirection","slug":"opendirection"},{"level":2,"title":"Events","slug":"events"},{"level":3,"title":"update:modelValue","slug":"update-modelvalue"},{"level":3,"title":"selected","slug":"selected"},{"level":3,"title":"removed","slug":"removed"},{"level":3,"title":"~~opened~~","slug":"opened"},{"level":3,"title":"~~closed~~","slug":"closed"},{"level":3,"title":"focus","slug":"focus"},{"level":3,"title":"blur","slug":"blur"},{"level":3,"title":"toggle","slug":"toggle"},{"level":3,"title":"search:input","slug":"search-input"},{"level":3,"title":"search:change","slug":"search-change"},{"level":3,"title":"search:focus","slug":"search-focus"},{"level":3,"title":"search:blur","slug":"search-blur"},{"level":2,"title":"Slots","slug":"slots"},{"level":3,"title":"dropdown-item","slug":"dropdown-item"},{"level":3,"title":"tag","slug":"tag"},{"level":3,"title":"toggle","slug":"toggle-2"},{"level":3,"title":"loading","slug":"loading-2"}],"relativePath":"api-reference.md","lastUpdated":1627819285540}',a={},i=o('<h1 id="api-reference"><a class="header-anchor" href="#api-reference" aria-hidden="true">#</a> API Reference</h1><h2 id="props"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2><h3 id="model-value"><a class="header-anchor" href="#model-value" aria-hidden="true">#</a> model-value</h3><ul><li><p><strong>Type</strong>:</p><ul><li><code>(OptionType)[]</code> if <code>multiple</code> is <code>true</code></li><li><code>(OptionType | EmptyModelValueType)</code> if <code>multiple</code> is <code>false</code></li></ul></li><li><p><strong>Details</strong>:</p><p>Required.</p><p>The selected options.</p></li></ul><h3 id="empty-model-value"><a class="header-anchor" href="#empty-model-value" aria-hidden="true">#</a> empty-model-value</h3><ul><li><p><strong>Type</strong>: <code>EmptyModelValueType = any</code></p></li><li><p><strong>Default</strong>: <code>null</code></p></li><li><p><strong>Details</strong>:</p><p>Only works if <code>multiple</code> is <code>false</code>.</p><p>If there is no selecting option, <code>update:modelValue</code> event will emit this value.</p></li></ul><h3 id="options"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h3><ul><li><p><strong>Type</strong>: <code>OptionType[] = any[]</code></p></li><li><p><strong>Details</strong>:</p><p>Required.</p></li></ul><h3 id="visible-options"><a class="header-anchor" href="#visible-options" aria-hidden="true">#</a> visible-options</h3><ul><li><p><strong>Type</strong>: <code>OptionType[]</code></p></li><li><p><strong>Details</strong>:</p><p>This would be useful if you have options, but you only want to display partial of those option.</p><p>You could use this feature to implement customize filtering, remote searching, etc.</p><blockquote><p>Options in <code>options</code> and <code>visible-options</code> must be the same <strong>raw</strong> object.</p></blockquote></li></ul><h3 id="disabled"><a class="header-anchor" href="#disabled" aria-hidden="true">#</a> disabled</h3><ul><li><p><strong>Type</strong>: <code>boolean</code></p></li><li><p><strong>Default</strong>: <code>false</code></p><p>Whether to disable the select.</p></li></ul><h3 id="loading"><a class="header-anchor" href="#loading" aria-hidden="true">#</a> loading</h3><ul><li><p><strong>Type</strong>: <code>boolean</code></p></li><li><p><strong>Default</strong>: <code>false</code></p><p>Whether to show the loading spinner.</p></li></ul><h3 id="label-by"><a class="header-anchor" href="#label-by" aria-hidden="true">#</a> label-by</h3><ul><li><p><strong>Type</strong>: <code>string | (option =&gt; string)</code></p></li><li><p><strong>Details</strong>:</p><p>This will be used in dropdown and tags.</p><p>It accepts path, or function to locate the label.</p><p>For example, if you have options like this: <code>[{ details: { name: &#39;bar&#39; } }]</code></p><p>You could pass <code>details.name</code> or <code>option =&gt; option.detail.name</code> to set label to <code>&#39;bar&#39;</code>.</p></li></ul><h3 id="value-by"><a class="header-anchor" href="#value-by" aria-hidden="true">#</a> value-by</h3><ul><li><p><strong>Type</strong>: <code>string | (option =&gt; string)</code></p></li><li><p><strong>Details</strong>:</p><p>Same as <code>label-by</code> but for <code>value</code></p></li></ul><h3 id="disabled-by"><a class="header-anchor" href="#disabled-by" aria-hidden="true">#</a> disabled-by</h3><ul><li><p><strong>Type</strong>: <code>string | (option =&gt; boolean)</code></p></li><li><p><strong>Default</strong>: <code>&#39;disabled&#39;</code></p></li><li><p><strong>Details</strong>:</p><p>Same as <code>label-by</code> but for <code>disabled</code></p></li></ul><h3 id="group-by"><a class="header-anchor" href="#group-by" aria-hidden="true">#</a> group-by</h3><ul><li><p><strong>Type</strong>: <code>string | (option =&gt; boolean)</code></p></li><li><p><strong>Default</strong>: <code>&#39;group&#39;</code></p></li><li><p><strong>Details</strong>:</p><p>Same as <code>label-by</code> but for <code>group</code></p><p>If one option is group, its <code>value</code> must be type <code>OptionType[]</code>.</p><p>When a group option is selected, those <code>value</code>s will be selected, and if all of those <code>value</code>s are already selected, it will be deselected.</p></li></ul><h3 id="placeholder"><a class="header-anchor" href="#placeholder" aria-hidden="true">#</a> placeholder</h3><ul><li><p><strong>Type</strong>: <code>string</code></p></li><li><p><strong>Default</strong>: <code>&#39;Select option&#39;</code></p></li></ul><h3 id="searchable"><a class="header-anchor" href="#searchable" aria-hidden="true">#</a> searchable</h3><ul><li><p><strong>Type</strong>: <code>boolean</code></p></li><li><p><strong>Default</strong>: <code>false</code></p></li><li><p><strong>Details</strong>:</p><p>When <code>true</code>, <code>options</code> (or <code>visible-options</code> if passed) will be filtered by the search text.</p></li></ul><h3 id="search-placeholder"><a class="header-anchor" href="#search-placeholder" aria-hidden="true">#</a> search-placeholder</h3><ul><li><p><strong>Type</strong>: <code>string</code></p></li><li><p><strong>Default</strong>: <code>&#39;Type to search&#39;</code></p></li></ul><h3 id="clear-on-close"><a class="header-anchor" href="#clear-on-close" aria-hidden="true">#</a> clear-on-close</h3><ul><li><p><strong>Type</strong>: <code>boolean</code></p></li><li><p><strong>Default</strong>: <code>false</code></p></li><li><p><strong>Details</strong>:</p><p>Whether to clear search text after collapsing dropdown.</p></li></ul><h3 id="clear-on-select"><a class="header-anchor" href="#clear-on-select" aria-hidden="true">#</a> clear-on-select</h3><ul><li><p><strong>Type</strong>: <code>boolean</code></p></li><li><p><strong>Default</strong>: <code>false</code></p></li><li><p><strong>Details</strong>:</p><p>Whether to clear search text after selected/removed.</p></li></ul><h3 id="multiple"><a class="header-anchor" href="#multiple" aria-hidden="true">#</a> multiple</h3><ul><li><p><strong>Type</strong>: <code>boolean</code></p></li><li><p><strong>Default</strong>: <code>false</code></p></li></ul><h3 id="min"><a class="header-anchor" href="#min" aria-hidden="true">#</a> min</h3><ul><li><p><strong>Type</strong>: <code>number</code></p></li><li><p><strong>Default</strong>: <code>0</code></p></li><li><p><strong>Details</strong>:</p><p>If <code>multiple</code> is <code>false</code>, <code>0</code> means clearable, <code>1</code> means non-clearable.</p></li></ul><h3 id="max"><a class="header-anchor" href="#max" aria-hidden="true">#</a> max</h3><ul><li><p><strong>Type</strong>: <code>boolean</code></p></li><li><p><strong>Default</strong>: <code>Infinity</code></p></li><li><p><strong>Details</strong>:</p><p>Only works if <code>multiple</code> is <code>true</code>.</p></li></ul><h3 id="taggable"><a class="header-anchor" href="#taggable" aria-hidden="true">#</a> taggable</h3><ul><li><p><strong>Type</strong>: <code>boolean</code></p></li><li><p><strong>Default</strong>: <code>false</code></p></li><li><p><strong>Details</strong>:</p><p>Only works if <code>multiple</code> is <code>true</code>.</p></li></ul><h3 id="collapse-tags"><a class="header-anchor" href="#collapse-tags" aria-hidden="true">#</a> collapse-tags</h3><ul><li><p><strong>Type</strong>: <code>boolean</code></p></li><li><p><strong>Default</strong>: <code>false</code></p><p>Only works if <code>taggable</code> is <code>true</code>.</p></li></ul><h3 id="hide-selected"><a class="header-anchor" href="#hide-selected" aria-hidden="true">#</a> hide-selected</h3><ul><li><p><strong>Type</strong>: <code>boolean</code></p></li><li><p><strong>Default</strong>: <code>false</code></p></li><li><p><strong>Details</strong>:</p><p>Only works if <code>multiple</code> is <code>true</code>.</p><p>Whether to Hide already selected options in the dropdown.</p></li></ul><h3 id="close-on-select"><a class="header-anchor" href="#close-on-select" aria-hidden="true">#</a> close-on-select</h3><ul><li><p><strong>Type</strong>: <code>boolean</code></p></li><li><p><strong>Default</strong>: <code>false</code></p></li><li><p><strong>Details</strong>:</p><p>Whether to collapse dropdown after selected/removed.</p></li></ul><h3 id="maxheight"><a class="header-anchor" href="#maxheight" aria-hidden="true">#</a> maxHeight</h3><p>New in <code>v2.5.0+</code></p><ul><li><p><strong>Type</strong>: <code>number</code></p></li><li><p><strong>Default</strong>: <code>300</code></p></li><li><p><strong>Details</strong>:</p><p>Max height of dropdown.</p></li></ul><h3 id="opendirection"><a class="header-anchor" href="#opendirection" aria-hidden="true">#</a> openDirection</h3><p>New in <code>v2.5.0+</code></p><ul><li><p><strong>Type</strong>: <code>&#39;top&#39; | &#39;bottom&#39;</code></p></li><li><p><strong>Details</strong>:</p><p>Fixed opening direction.</p><p>If it is not set, it will be automatically calculated based on <code>maxHeight</code>.</p></li></ul><h2 id="events"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><h3 id="update-modelvalue"><a class="header-anchor" href="#update-modelvalue" aria-hidden="true">#</a> update:modelValue</h3><ul><li><p><strong>Arguments</strong>:</p><ul><li><code>{(OptionType | EmptyModelValueType) | (OptionType | EmptyModelValueType)[]}</code> modelValue</li></ul></li></ul><h3 id="selected"><a class="header-anchor" href="#selected" aria-hidden="true">#</a> selected</h3><ul><li><p><strong>Arguments</strong>:</p><ul><li><code>{OptionType}</code> option</li></ul></li></ul><h3 id="removed"><a class="header-anchor" href="#removed" aria-hidden="true">#</a> removed</h3><ul><li><p><strong>Arguments</strong>:</p><ul><li><code>{OptionType}</code> option</li></ul></li></ul><h3 id="opened"><a class="header-anchor" href="#opened" aria-hidden="true">#</a> <s>opened</s></h3><blockquote><p>Warning: deprecated, use <a href="#focus"><code>focus</code></a> instead.</p></blockquote><h3 id="closed"><a class="header-anchor" href="#closed" aria-hidden="true">#</a> <s>closed</s></h3><blockquote><p>Warning: deprecated, use <a href="#blur"><code>blur</code></a> instead.</p></blockquote><h3 id="focus"><a class="header-anchor" href="#focus" aria-hidden="true">#</a> focus</h3><p>New in <code>v2.4.0+</code></p><h3 id="blur"><a class="header-anchor" href="#blur" aria-hidden="true">#</a> blur</h3><p>New in <code>v2.4.0+</code></p><h3 id="toggle"><a class="header-anchor" href="#toggle" aria-hidden="true">#</a> toggle</h3><p>New in <code>2.6.0+</code></p><h3 id="search-input"><a class="header-anchor" href="#search-input" aria-hidden="true">#</a> search:input</h3><ul><li><p><strong>Arguments</strong>:</p><ul><li><code>{Event}</code> event</li></ul></li></ul><h3 id="search-change"><a class="header-anchor" href="#search-change" aria-hidden="true">#</a> search:change</h3><ul><li><p><strong>Arguments</strong>:</p><ul><li><code>{Event}</code> event</li></ul></li></ul><h3 id="search-focus"><a class="header-anchor" href="#search-focus" aria-hidden="true">#</a> search:focus</h3><ul><li><p><strong>Arguments</strong>:</p><ul><li><code>{Event}</code> event</li></ul></li></ul><h3 id="search-blur"><a class="header-anchor" href="#search-blur" aria-hidden="true">#</a> search:blur</h3><ul><li><p><strong>Arguments</strong>:</p><ul><li><code>{Event}</code> event</li></ul></li></ul><h2 id="slots"><a class="header-anchor" href="#slots" aria-hidden="true">#</a> Slots</h2><h3 id="dropdown-item"><a class="header-anchor" href="#dropdown-item" aria-hidden="true">#</a> dropdown-item</h3><ul><li><p><strong>Attributes</strong>:</p><ul><li><code>{OptionType}</code> option</li></ul></li></ul><h3 id="tag"><a class="header-anchor" href="#tag" aria-hidden="true">#</a> tag</h3><ul><li><p><strong>Attributes</strong>:</p><ul><li><p><code>{OptionType}</code> option</p></li><li><p><code>{Function}</code> remove</p><p>New in <code>v2.7.0+</code></p></li></ul></li></ul><h3 id="toggle-2"><a class="header-anchor" href="#toggle-2" aria-hidden="true">#</a> toggle</h3><ul><li><p><strong>Attributes</strong>:</p><ul><li><code>{boolean}</code> isFocusing</li><li><code>{Function}</code> toggle</li></ul><p>When using this slot, you often need to bind the <code>toggle</code> function to click event or else to enable open/close functionality.</p><p>In addition, you may also have to prevent <strong>mousedown</strong> event by adding <code>@mousedown.prevent</code> to prevent default behavior (fire focus event). See more details <a href="https://github.com/iendeavor/vue-next-select/issues/239" target="_blank" rel="noopener noreferrer">here</a>.</p></li></ul><h3 id="loading-2"><a class="header-anchor" href="#loading-2" aria-hidden="true">#</a> loading</h3>',85);a.render=function(o,t,a,r,s,d){return e(),l("div",null,[i])};export default a;export{t as __pageData};
